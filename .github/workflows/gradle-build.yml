name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: clean bootJar --parallel

    # Docker Compose 파일 스크립트로 생성
    - name: Create Docker Compose file
      run: |
        cat > docker-compose.yml <<EOF
        version: '3.8'
        services:
          db:
            image: mysql:8.0
            environment:
              MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
              MYSQL_DATABASE: ${{ secrets.DB_NAME }}
              MYSQL_USER: ${{ secrets.DB_USERNAME }}
              MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
            ports:
              - "3306:3306"
            volumes:
              - mysql_data:/var/lib/mysql

          app:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo:latest
            environment:
              SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${{ secrets.DB_NAME }}
              SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
              SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
              SPRING_PROFILES_ACTIVE: prod
            ports:
              - "8080:8080"
            depends_on:
              - db
        volumes:
          mysql_data:
        EOF

    - name: Docker Compose Build
      run: docker-compose -f docker-compose.yml build

    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Compose Push
      run: docker-compose -f docker-compose.yml push

    - name: Docker Compose Up
      run: docker-compose -f docker-compose.yml up -d
